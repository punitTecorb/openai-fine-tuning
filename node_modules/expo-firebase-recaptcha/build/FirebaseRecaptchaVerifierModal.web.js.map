{"version":3,"file":"FirebaseRecaptchaVerifierModal.web.js","sourceRoot":"","sources":["../src/FirebaseRecaptchaVerifierModal.web.tsx"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAW/B,MAAM,8BAA+B,SAAQ,KAAK,CAAC,SAAgB;IAAnE;;QACU,aAAQ,GAA2C,IAAI,CAAC;QAExD,WAAM,GAAG,CAAC,GAAQ,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,IAAI,CAAC,KAAK,CAAC,iCAAiC,KAAK,SAAS,EAAE;oBAC9D,QAAQ,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,iCAAiC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK;yBACtE,iCAAiC,CAAC;iBACtC;gBACD,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;oBAC3B,QAAQ,CAAC,IAAI,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBACxD;gBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE;oBACvD,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ;iBACvE,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;QACH,CAAC,CAAC;IAqCJ,CAAC;IAnCC,qBAAqB,CAAC,SAAgB;QACpC,OAAO,CACL,IAAI,CAAC,KAAK,CAAC,iCAAiC;YAC1C,SAAS,CAAC,iCAAiC;YAC7C,IAAI,CAAC,KAAK,CAAC,4BAA4B,KAAK,SAAS,CAAC,4BAA4B;YAClF,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,SAAS,CAAC,YAAY,CACnD,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,SAAgB;QACjC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,EAAE;YAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;SACF;IACH,CAAC;IAED,MAAM;QACJ,MAAM,EACJ,4BAA4B,EAC5B,iCAAiC,EACjC,YAAY,GACb,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,OAAO,CACL,6BACE,KAAK,EAAE,MAAM,CAAC,SAAS,EACvB,GAAG,EAAE,GAAG,4BAA4B,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,IAC5D,iCAAiC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAClD,IAAI,YAAY,IAAI,EAAE,EAAE,EACxB,EAAE,EAAC,qBAAqB,EACxB,GAAG,EAAE,IAAI,CAAC,MAAM,EAChB,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,GACvC,CACH,CAAC;IACJ,CAAC;CACF;AAED,eAAe,KAAK,CAAC,UAAU,CAAC,CAAC,KAA8B,EAAE,GAAQ,EAAE,EAAE,CAAC,CAC5E,oBAAC,8BAA8B,oBAAK,KAAK,IAAE,QAAQ,EAAE,GAAG,IAAI,CAC7D,CAAC,CAAC;AAEH,MAAM,MAAM,GAAG;IACb,2DAA2D;IAC3D,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;CAC5B,CAAC","sourcesContent":["import firebase from 'firebase';\nimport * as React from 'react';\n\nimport { FirebaseAuthApplicationVerifier } from './FirebaseRecaptcha.types';\n\ninterface Props {\n  attemptInvisibleVerification?: boolean;\n  appVerificationDisabledForTesting?: boolean;\n  languageCode?: string;\n  innerRef: React.MutableRefObject<FirebaseAuthApplicationVerifier | null>;\n}\n\nclass FirebaseRecaptchaVerifierModal extends React.Component<Props> {\n  private verifier: FirebaseAuthApplicationVerifier | null = null;\n\n  private setRef = (ref: any) => {\n    if (ref) {\n      if (this.props.appVerificationDisabledForTesting !== undefined) {\n        firebase.auth().settings.appVerificationDisabledForTesting = !!this.props\n          .appVerificationDisabledForTesting;\n      }\n      if (this.props.languageCode) {\n        firebase.auth().languageCode = this.props.languageCode;\n      }\n      this.verifier = new firebase.auth.RecaptchaVerifier(ref, {\n        size: this.props.attemptInvisibleVerification ? 'invisible' : 'normal',\n      });\n    } else {\n      this.verifier = null;\n    }\n    if (this.props.innerRef) {\n      this.props.innerRef.current = this.verifier;\n    }\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      this.props.appVerificationDisabledForTesting !==\n        nextProps.appVerificationDisabledForTesting ||\n      this.props.attemptInvisibleVerification !== nextProps.attemptInvisibleVerification ||\n      this.props.languageCode !== nextProps.languageCode\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.innerRef !== prevProps.innerRef) {\n      if (this.props.innerRef) {\n        this.props.innerRef.current = this.verifier;\n      }\n    }\n  }\n\n  render() {\n    const {\n      attemptInvisibleVerification,\n      appVerificationDisabledForTesting,\n      languageCode,\n    } = this.props;\n    return (\n      <div\n        style={styles.container}\n        key={`${attemptInvisibleVerification ? 'invisible' : 'visible'}-${\n          appVerificationDisabledForTesting ? 'testing' : 'regular'\n        }-${languageCode ?? ''}`}\n        id=\"recaptcha-container\"\n        ref={this.setRef}\n        dangerouslySetInnerHTML={{ __html: '' }}\n      />\n    );\n  }\n}\n\nexport default React.forwardRef((props: Omit<Props, 'innerRef'>, ref: any) => (\n  <FirebaseRecaptchaVerifierModal {...props} innerRef={ref} />\n));\n\nconst styles = {\n  // Ensure the reCAPTCHA badge is in front or other elements\n  container: { zIndex: 1000 },\n};\n"]}